{"message":"the name `U128` is defined multiple times","code":{"code":"E0252","explanation":"Two items of the same name cannot be imported without rebinding one of the\nitems under a new local name.\n\nErroneous code example:\n\n```compile_fail,E0252\nuse foo::baz;\nuse bar::baz; // error, do `use bar::baz as quux` instead\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse foo::baz as foo_baz;\nuse bar::baz; // ok!\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nOr you can reference the item with its parent:\n\n```\nuse bar::baz;\n\nfn main() {\n    let x = foo::baz; // ok!\n}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":631,"byte_end":635,"line_start":14,"line_end":14,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{ValidAccountId, U128};","highlight_start":44,"highlight_end":48}],"label":"`U128` reimported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":249,"byte_end":253,"line_start":6,"line_end":6,"column_start":28,"column_end":32,"is_primary":false,"text":[{"text":"use near_sdk::json_types::{U128, WrappedBalance, WrappedDuration};","highlight_start":28,"highlight_end":32}],"label":"previous import of the type `U128` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`U128` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove unnecessary import","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":629,"byte_end":635,"line_start":14,"line_end":14,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{ValidAccountId, U128};","highlight_start":42,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0252]\u001b[0m\u001b[0m\u001b[1m: the name `U128` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:14:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::json_types::{U128, WrappedBalance, WrappedDuration};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious import of the type `U128` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::json_types::{ValidAccountId, U128};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`U128` reimported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `U128` must be defined only once in the type namespace of this module\u001b[0m\n\n"}
{"message":"the name `AccountId` is defined multiple times","code":{"code":"E0252","explanation":"Two items of the same name cannot be imported without rebinding one of the\nitems under a new local name.\n\nErroneous code example:\n\n```compile_fail,E0252\nuse foo::baz;\nuse bar::baz; // error, do `use bar::baz as quux` instead\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse foo::baz as foo_baz;\nuse bar::baz; // ok!\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nOr you can reference the item with its parent:\n\n```\nuse bar::baz;\n\nfn main() {\n    let x = foo::baz; // ok!\n}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":677,"byte_end":686,"line_start":15,"line_end":15,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":40,"highlight_end":49}],"label":"`AccountId` reimported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":135,"byte_end":144,"line_start":4,"line_end":4,"column_start":16,"column_end":25,"is_primary":false,"text":[{"text":"use near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};","highlight_start":16,"highlight_end":25}],"label":"previous import of the type `AccountId` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`AccountId` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove unnecessary import","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":677,"byte_end":688,"line_start":15,"line_end":15,"column_start":40,"column_end":51,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":40,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0252]\u001b[0m\u001b[0m\u001b[1m: the name `AccountId` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:15:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious import of the type `AccountId` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`AccountId` reimported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove unnecessary import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `AccountId` must be defined only once in the type namespace of this module\u001b[0m\n\n"}
{"message":"the name `Balance` is defined multiple times","code":{"code":"E0252","explanation":"Two items of the same name cannot be imported without rebinding one of the\nitems under a new local name.\n\nErroneous code example:\n\n```compile_fail,E0252\nuse foo::baz;\nuse bar::baz; // error, do `use bar::baz as quux` instead\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse foo::baz as foo_baz;\nuse bar::baz; // ok!\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nOr you can reference the item with its parent:\n\n```\nuse bar::baz;\n\nfn main() {\n    let x = foo::baz; // ok!\n}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":688,"byte_end":695,"line_start":15,"line_end":15,"column_start":51,"column_end":58,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":51,"highlight_end":58}],"label":"`Balance` reimported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":146,"byte_end":153,"line_start":4,"line_end":4,"column_start":27,"column_end":34,"is_primary":false,"text":[{"text":"use near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};","highlight_start":27,"highlight_end":34}],"label":"previous import of the type `Balance` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Balance` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove unnecessary import","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":688,"byte_end":697,"line_start":15,"line_end":15,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0252]\u001b[0m\u001b[0m\u001b[1m: the name `Balance` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:15:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious import of the type `Balance` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Balance` reimported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove unnecessary import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Balance` must be defined only once in the type namespace of this module\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `near_blockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1989,"byte_end":2004,"line_start":39,"line_end":39,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":"use of undeclared crate or module `near_blockchain`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1989,"byte_end":2004,"line_start":39,"line_end":39,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:39:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `near_blockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"use of undeclared crate or module `near_blockchain`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":1},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":1},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":1},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":1},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":1},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":1},{"text":"                &mut self,","highlight_start":1,"highlight_end":1},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":1},{"text":"                amount: U128,","highlight_start":1,"highlight_end":1},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":1},{"text":"            ) {","highlight_start":1,"highlight_end":1},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":1},{"text":"            }","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":1},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":1},{"text":"                &mut self,","highlight_start":1,"highlight_end":1},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":1},{"text":"                amount: U128,","highlight_start":1,"highlight_end":1},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":1},{"text":"                msg: String,","highlight_start":1,"highlight_end":1},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":1},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":1},{"text":"            }","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":1},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":1},{"text":"            }","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":1},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":1},{"text":"            }","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":1},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":1},{"text":"            #[private]","highlight_start":1,"highlight_end":1},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":1},{"text":"                &mut self,","highlight_start":1,"highlight_end":1},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":1},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":1},{"text":"                amount: U128,","highlight_start":1,"highlight_end":1},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":1},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":1},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":1},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":1},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":1},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":1},{"text":"                }","highlight_start":1,"highlight_end":1},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":1},{"text":"            }","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"    };","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `near_blockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"use of undeclared crate or module `near_blockchain`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `near_blockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"use of undeclared crate or module `near_blockchain`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3246,"byte_end":3339,"line_start":77,"line_end":77,"column_start":1,"column_end":94,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);","highlight_start":1,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_storage!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2434,"byte_end":3983,"line_start":68,"line_end":110,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_storage {","highlight_start":1,"highlight_end":43},{"text":"    ($contract: ident, $token: ident $(, $on_account_closed_fn:ident)?) => {","highlight_start":1,"highlight_end":77},{"text":"        use $crate::storage_management::{","highlight_start":1,"highlight_end":42},{"text":"            StorageManagement, StorageBalance, StorageBalanceBounds","highlight_start":1,"highlight_end":68},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl StorageManagement for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_deposit(","highlight_start":1,"highlight_end":32},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                account_id: Option<ValidAccountId>,","highlight_start":1,"highlight_end":52},{"text":"                registration_only: Option<bool>,","highlight_start":1,"highlight_end":49},{"text":"            ) -> StorageBalance {","highlight_start":1,"highlight_end":34},{"text":"                self.$token.storage_deposit(account_id, registration_only)","highlight_start":1,"highlight_end":75},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_withdraw(&mut self, amount: Option<U128>) -> StorageBalance {","highlight_start":1,"highlight_end":85},{"text":"                self.$token.storage_withdraw(amount)","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_unregister(&mut self, force: Option<bool>) -> bool {","highlight_start":1,"highlight_end":76},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                if let Some((account_id, balance)) = self.$token.internal_storage_unregister(force) {","highlight_start":1,"highlight_end":102},{"text":"                    $(self.$on_account_closed_fn(account_id, balance);)?","highlight_start":1,"highlight_end":73},{"text":"                    true","highlight_start":1,"highlight_end":25},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    false","highlight_start":1,"highlight_end":26},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_bounds(&self) -> StorageBalanceBounds {","highlight_start":1,"highlight_end":71},{"text":"                self.$token.storage_balance_bounds()","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_of(&self, account_id: ValidAccountId) -> Option<StorageBalance> {","highlight_start":1,"highlight_end":97},{"text":"                self.$token.storage_balance_of(account_id)","highlight_start":1,"highlight_end":59},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:77:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `near_blockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":79,"line_end":79,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":"use of undeclared crate or module `near_blockchain`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":79,"line_end":79,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:79:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `near_blockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `FT_ContractContract` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":2010,"byte_end":2021,"line_start":40,"line_end":40,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"impl FT_Contract {","highlight_start":6,"highlight_end":17}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `FT_ContractContract` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:40:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl FT_Contract {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `FT_ContractContract` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3207,"byte_end":3218,"line_start":76,"line_end":76,"column_start":52,"column_end":63,"is_primary":true,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":52,"highlight_end":63}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `FT_ContractContract` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `FT_ContractContract` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3300,"byte_end":3311,"line_start":77,"line_end":77,"column_start":55,"column_end":66,"is_primary":true,"text":[{"text":"near_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);","highlight_start":55,"highlight_end":66}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `FT_ContractContract` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:77:55\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `FT_ContractContract` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3396,"byte_end":3407,"line_start":80,"line_end":80,"column_start":40,"column_end":51,"is_primary":true,"text":[{"text":"impl FungibleTokenMetadataProvider for FT_Contract {","highlight_start":40,"highlight_end":51}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `FT_ContractContract` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:80:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl FungibleTokenMetadataProvider for FT_Contract {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"unused imports: `Deserialize`, `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":31,"line_start":1,"line_end":1,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"use near_sdk::serde::{Serialize, Deserialize};","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":33,"byte_end":44,"line_start":1,"line_end":1,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"use near_sdk::serde::{Serialize, Deserialize};","highlight_start":34,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"use near_sdk::serde::{Serialize, Deserialize};","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Deserialize`, `Serialize`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::serde::{Serialize, Deserialize};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `near_sdk::serde_json::json`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":51,"byte_end":77,"line_start":2,"line_end":2,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use near_sdk::serde_json::json;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":47,"byte_end":78,"line_start":2,"line_end":2,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use near_sdk::serde_json::json;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `near_sdk::serde_json::json`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::serde_json::json;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `near_sdk::collections::UnorderedMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":83,"byte_end":118,"line_start":3,"line_end":3,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"use near_sdk::collections::UnorderedMap;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":79,"byte_end":119,"line_start":3,"line_end":3,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"use near_sdk::collections::UnorderedMap;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `near_sdk::collections::UnorderedMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::collections::UnorderedMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Duration`, `Gas`, `Timestamp`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":155,"byte_end":164,"line_start":4,"line_end":4,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"use near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":166,"byte_end":174,"line_start":4,"line_end":4,"column_start":47,"column_end":55,"is_primary":true,"text":[{"text":"use near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};","highlight_start":47,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":176,"byte_end":179,"line_start":4,"line_end":4,"column_start":57,"column_end":60,"is_primary":true,"text":[{"text":"use near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};","highlight_start":57,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":153,"byte_end":179,"line_start":4,"line_end":4,"column_start":34,"column_end":60,"is_primary":true,"text":[{"text":"use near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};","highlight_start":34,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Duration`, `Gas`, `Timestamp`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:4:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{AccountId, Balance, Timestamp, Duration, Gas};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused imports: `PromiseResult`, `Promise`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":197,"byte_end":204,"line_start":5,"line_end":5,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"use near_sdk::{Promise, PromiseResult};","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":206,"byte_end":219,"line_start":5,"line_end":5,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"use near_sdk::{Promise, PromiseResult};","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":182,"byte_end":221,"line_start":5,"line_end":5,"column_start":1,"column_end":40,"is_primary":true,"text":[{"text":"use near_sdk::{Promise, PromiseResult};","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PromiseResult`, `Promise`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{Promise, PromiseResult};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `WrappedBalance`, `WrappedDuration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":255,"byte_end":269,"line_start":6,"line_end":6,"column_start":34,"column_end":48,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{U128, WrappedBalance, WrappedDuration};","highlight_start":34,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":271,"byte_end":286,"line_start":6,"line_end":6,"column_start":50,"column_end":65,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{U128, WrappedBalance, WrappedDuration};","highlight_start":50,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":253,"byte_end":286,"line_start":6,"line_end":6,"column_start":32,"column_end":65,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{U128, WrappedBalance, WrappedDuration};","highlight_start":32,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `WrappedBalance`, `WrappedDuration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:34\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::json_types::{U128, WrappedBalance, WrappedDuration};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `BorshDeserialize`, `BorshSerialize`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":508,"byte_end":512,"line_start":12,"line_end":12,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":514,"byte_end":530,"line_start":12,"line_end":12,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":29,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":532,"byte_end":546,"line_start":12,"line_end":12,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":486,"byte_end":548,"line_start":12,"line_end":12,"column_start":1,"column_end":63,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BorshDeserialize`, `BorshSerialize`, `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:12:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `U128`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":631,"byte_end":635,"line_start":14,"line_end":14,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{ValidAccountId, U128};","highlight_start":44,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":629,"byte_end":635,"line_start":14,"line_end":14,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{ValidAccountId, U128};","highlight_start":42,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `U128`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:14:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::json_types::{ValidAccountId, U128};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused imports: `AccountId`, `Balance`, `PanicOnDefault`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":677,"byte_end":686,"line_start":15,"line_end":15,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":40,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":688,"byte_end":695,"line_start":15,"line_end":15,"column_start":51,"column_end":58,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":51,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":697,"byte_end":711,"line_start":15,"line_end":15,"column_start":60,"column_end":74,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":60,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":675,"byte_end":711,"line_start":15,"line_end":15,"column_start":38,"column_end":74,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};","highlight_start":38,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AccountId`, `Balance`, `PanicOnDefault`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:15:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{env, log, near_bindgen, AccountId, Balance, PanicOnDefault, PromiseOrValue};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `FT_Contract` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":1216,"byte_end":1227,"line_start":32,"line_end":32,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"pub struct FT_Contract {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1216,"byte_end":1227,"line_start":32,"line_end":32,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"pub struct FT_Contract {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"FtContract","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `FT_Contract` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:32:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct FT_Contract {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `FtContract`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":838,"byte_end":846,"line_start":20,"line_end":20,"column_start":28,"column_end":36,"is_primary":true,"text":[{"text":"const TOKEN_NAME: String = \"SKILLS\";","highlight_start":28,"highlight_end":36}],"label":"expected struct `std::string::String`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":838,"byte_end":846,"line_start":20,"line_end":20,"column_start":28,"column_end":36,"is_primary":true,"text":[{"text":"const TOKEN_NAME: String = \"SKILLS\";","highlight_start":28,"highlight_end":36}],"label":null,"suggested_replacement":"\"SKILLS\".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:20:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst TOKEN_NAME: String = \"SKILLS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `std::string::String`, found `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: try using a conversion method: `\"SKILLS\".to_string()`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":877,"byte_end":885,"line_start":21,"line_end":21,"column_start":30,"column_end":38,"is_primary":true,"text":[{"text":"const TOKEN_SYMBOL: String = \"SKILLS\";","highlight_start":30,"highlight_end":38}],"label":"expected struct `std::string::String`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":877,"byte_end":885,"line_start":21,"line_end":21,"column_start":30,"column_end":38,"is_primary":true,"text":[{"text":"const TOKEN_SYMBOL: String = \"SKILLS\";","highlight_start":30,"highlight_end":38}],"label":null,"suggested_replacement":"\"SKILLS\".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst TOKEN_SYMBOL: String = \"SKILLS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `std::string::String`, found `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: try using a conversion method: `\"SKILLS\".to_string()`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":915,"byte_end":938,"line_start":23,"line_end":23,"column_start":28,"column_end":51,"is_primary":true,"text":[{"text":"const FOUNDER_ID: String = \"founder_skill.testnet\";","highlight_start":28,"highlight_end":51}],"label":"expected struct `std::string::String`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":915,"byte_end":938,"line_start":23,"line_end":23,"column_start":28,"column_end":51,"is_primary":true,"text":[{"text":"const FOUNDER_ID: String = \"founder_skill.testnet\";","highlight_start":28,"highlight_end":51}],"label":null,"suggested_replacement":"\"founder_skill.testnet\".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:23:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst FOUNDER_ID: String = \"founder_skill.testnet\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `std::string::String`, found `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: try using a conversion method: `\"founder_skill.testnet\".to_string()`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":970,"byte_end":996,"line_start":24,"line_end":24,"column_start":31,"column_end":57,"is_primary":true,"text":[{"text":"const FOUNDATION_ID: String = \"foundation_skill.testnet\";","highlight_start":31,"highlight_end":57}],"label":"expected struct `std::string::String`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":970,"byte_end":996,"line_start":24,"line_end":24,"column_start":31,"column_end":57,"is_primary":true,"text":[{"text":"const FOUNDATION_ID: String = \"foundation_skill.testnet\";","highlight_start":31,"highlight_end":57}],"label":null,"suggested_replacement":"\"foundation_skill.testnet\".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:24:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst FOUNDATION_ID: String = \"foundation_skill.testnet\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `std::string::String`, found `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: try using a conversion method: `\"foundation_skill.testnet\".to_string()`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1025,"byte_end":1048,"line_start":25,"line_end":25,"column_start":28,"column_end":51,"is_primary":true,"text":[{"text":"const AIRDROP_ID: String = \"airdrop_skill.testnet\";","highlight_start":28,"highlight_end":51}],"label":"expected struct `std::string::String`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1025,"byte_end":1048,"line_start":25,"line_end":25,"column_start":28,"column_end":51,"is_primary":true,"text":[{"text":"const AIRDROP_ID: String = \"airdrop_skill.testnet\";","highlight_start":28,"highlight_end":51}],"label":null,"suggested_replacement":"\"airdrop_skill.testnet\".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:25:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst AIRDROP_ID: String = \"airdrop_skill.testnet\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `std::string::String`, found `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: try using a conversion method: `\"airdrop_skill.testnet\".to_string()`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1081,"byte_end":1083,"line_start":27,"line_end":27,"column_start":31,"column_end":33,"is_primary":true,"text":[{"text":"const FOUNDER_PERCENT: U128 = 20;","highlight_start":31,"highlight_end":33}],"label":"expected struct `U128`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst FOUNDER_PERCENT: U128 = 20;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `U128`, found integer\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1118,"byte_end":1120,"line_start":28,"line_end":28,"column_start":34,"column_end":36,"is_primary":true,"text":[{"text":"const FOUNDATION_PERCENT: U128 = 20;","highlight_start":34,"highlight_end":36}],"label":"expected struct `U128`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:28:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst FOUNDATION_PERCENT: U128 = 20;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `U128`, found integer\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1159,"byte_end":1161,"line_start":29,"line_end":29,"column_start":38,"column_end":40,"is_primary":true,"text":[{"text":"const TOKEN_FOR_SELL_PERCENT: U128 = 50;","highlight_start":38,"highlight_end":40}],"label":"expected struct `U128`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:29:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst TOKEN_FOR_SELL_PERCENT: U128 = 50;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `U128`, found integer\u001b[0m\n\n"}
{"message":"invalid left-hand side of assignment","code":{"code":"E0070","explanation":"An assignment operator was used on a non-place expression.\n\nErroneous code examples:\n\n```compile_fail,E0070\nstruct SomeStruct {\n    x: i32,\n    y: i32,\n}\n\nconst SOME_CONST: i32 = 12;\n\nfn some_other_func() {}\n\nfn some_function() {\n    SOME_CONST = 14; // error: a constant value cannot be changed!\n    1 = 3; // error: 1 isn't a valid place!\n    some_other_func() = 4; // error: we cannot assign value to a function!\n    SomeStruct::x = 12; // error: SomeStruct a structure name but it is used\n                        //        like a variable!\n}\n```\n\nThe left-hand side of an assignment operator must be a place expression. A\nplace expression represents a memory location and can be a variable (with\noptional namespacing), a dereference, an indexing expression or a field\nreference.\n\nMore details can be found in the [Expressions] section of the Reference.\n\n[Expressions]: https://doc.rust-lang.org/reference/expressions.html#places-rvalues-and-temporaries\n\nAnd now let's give working examples:\n\n```\nstruct SomeStruct {\n    x: i32,\n    y: i32,\n}\nlet mut s = SomeStruct { x: 0, y: 0 };\n\ns.x = 3; // that's good !\n\n// ...\n\nfn some_func(x: &mut i32) {\n    *x = 12; // that's good !\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1193,"byte_end":1197,"line_start":30,"line_end":30,"column_start":31,"column_end":35,"is_primary":false,"text":[{"text":"const AIRDROP_PERCENT: U128 = U128 = 10;","highlight_start":31,"highlight_end":35}],"label":"cannot assign to this expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":1198,"byte_end":1199,"line_start":30,"line_end":30,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"const AIRDROP_PERCENT: U128 = U128 = 10;","highlight_start":36,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0070]\u001b[0m\u001b[0m\u001b[1m: invalid left-hand side of assignment\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:30:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst AIRDROP_PERCENT: U128 = U128 = 10;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mcannot assign to this expression\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1200,"byte_end":1202,"line_start":30,"line_end":30,"column_start":38,"column_end":40,"is_primary":true,"text":[{"text":"const AIRDROP_PERCENT: U128 = U128 = 10;","highlight_start":38,"highlight_end":40}],"label":"expected fn item, found `usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected fn item `fn(u128) -> U128 {U128}`\n      found type `usize`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:30:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst AIRDROP_PERCENT: U128 = U128 = 10;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected fn item, found `usize`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected fn item `\u001b[0m\u001b[0m\u001b[1mfn(u128) -> U128 {U128}\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                 found type `\u001b[0m\u001b[0m\u001b[1musize\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1193,"byte_end":1202,"line_start":30,"line_end":30,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"const AIRDROP_PERCENT: U128 = U128 = 10;","highlight_start":31,"highlight_end":40}],"label":"expected struct `U128`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:30:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst AIRDROP_PERCENT: U128 = U128 = 10;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `U128`, found `()`\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1989,"byte_end":2004,"line_start":39,"line_end":39,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":"the trait `BorshSerialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1989,"byte_end":2004,"line_start":39,"line_end":39,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25609,"byte_end":25630,"line_start":789,"line_end":789,"column_start":23,"column_end":44,"is_primary":false,"text":[{"text":"pub fn state_write<T: borsh::BorshSerialize>(state: &T) {","highlight_start":23,"highlight_end":44}],"label":"required by this bound in `state_write`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshSerialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:39:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshSerialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:789:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m789\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_write<T: borsh::BorshSerialize>(state: &T) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_write`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no function or associated item named `try_from` found for struct `ValidAccountId` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":2173,"byte_end":2181,"line_start":45,"line_end":45,"column_start":40,"column_end":48,"is_primary":true,"text":[{"text":"        let owner_id = ValidAccountId::try_from(env::predecessor_account_id().clone()).unwrap();","highlight_start":40,"highlight_end":48}],"label":"function or associated item not found in `ValidAccountId`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":"use std::convert::TryFrom;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `try_from` found for struct `ValidAccountId` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:45:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let owner_id = ValidAccountId::try_from(env::predecessor_account_id().clone()).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `ValidAccountId`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::convert::TryFrom;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":2338,"byte_end":2690,"line_start":49,"line_end":57,"column_start":23,"column_end":14,"is_primary":true,"text":[{"text":"            metadata: FungibleTokenMetadata {","highlight_start":23,"highlight_end":46},{"text":"                spec: FT_METADATA_SPEC.to_string(),","highlight_start":1,"highlight_end":52},{"text":"                name: TOKEN_NAME.to_string(),","highlight_start":1,"highlight_end":46},{"text":"                symbol: TOKEN_SYMBOL.to_string(),","highlight_start":1,"highlight_end":50},{"text":"                icon: Some(DATA_IMAGE_SVG_NEAR_ICON.to_string()),","highlight_start":1,"highlight_end":66},{"text":"                reference: None,","highlight_start":1,"highlight_end":33},{"text":"                reference_hash: None,","highlight_start":1,"highlight_end":38},{"text":"                decimals: 24,","highlight_start":1,"highlight_end":30},{"text":"            },","highlight_start":1,"highlight_end":14}],"label":"expected struct `LazyOption`, found struct `FungibleTokenMetadata`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `LazyOption<FungibleTokenMetadata>`\n   found struct `FungibleTokenMetadata`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:49:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            metadata: FungibleTokenMetadata {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_______________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                spec: FT_METADATA_SPEC.to_string(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                name: TOKEN_NAME.to_string(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                symbol: TOKEN_SYMBOL.to_string(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                decimals: 24,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `LazyOption`, found struct `FungibleTokenMetadata`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1mLazyOption<\u001b[0m\u001b[0mFungibleTokenMetadata\u001b[0m\u001b[0m\u001b[1m>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m              found struct `FungibleTokenMetadata`\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":79,"line_end":79,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":"the trait `Default` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":79,"line_end":79,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: Default` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:79:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":79,"line_end":79,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":"the trait `BorshDeserialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":79,"line_end":79,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25419,"byte_end":25442,"line_start":784,"line_end":784,"column_start":22,"column_end":45,"is_primary":false,"text":[{"text":"pub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {","highlight_start":22,"highlight_end":45}],"label":"required by this bound in `state_read`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshDeserialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:79:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshDeserialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:784:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m784\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_read`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `Default` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: Default` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `BorshDeserialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25419,"byte_end":25442,"line_start":784,"line_end":784,"column_start":22,"column_end":45,"is_primary":false,"text":[{"text":"pub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {","highlight_start":22,"highlight_end":45}],"label":"required by this bound in `state_read`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshDeserialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshDeserialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:784:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m784\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_read`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `BorshSerialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25609,"byte_end":25630,"line_start":789,"line_end":789,"column_start":23,"column_end":44,"is_primary":false,"text":[{"text":"pub fn state_write<T: borsh::BorshSerialize>(state: &T) {","highlight_start":23,"highlight_end":44}],"label":"required by this bound in `state_write`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshSerialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshSerialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:789:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m789\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_write<T: borsh::BorshSerialize>(state: &T) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_write`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `Default` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: Default` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `BorshDeserialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25419,"byte_end":25442,"line_start":784,"line_end":784,"column_start":22,"column_end":45,"is_primary":false,"text":[{"text":"pub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {","highlight_start":22,"highlight_end":45}],"label":"required by this bound in `state_read`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshDeserialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshDeserialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:784:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m784\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_read`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `BorshSerialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3156,"byte_end":3245,"line_start":76,"line_end":76,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25609,"byte_end":25630,"line_start":789,"line_end":789,"column_start":23,"column_end":44,"is_primary":false,"text":[{"text":"pub fn state_write<T: borsh::BorshSerialize>(state: &T) {","highlight_start":23,"highlight_end":44}],"label":"required by this bound in `state_write`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshSerialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(FT_Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshSerialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:789:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m789\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_write<T: borsh::BorshSerialize>(state: &T) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_write`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `Default` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3246,"byte_end":3339,"line_start":77,"line_end":77,"column_start":1,"column_end":94,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);","highlight_start":1,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_storage!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2434,"byte_end":3983,"line_start":68,"line_end":110,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_storage {","highlight_start":1,"highlight_end":43},{"text":"    ($contract: ident, $token: ident $(, $on_account_closed_fn:ident)?) => {","highlight_start":1,"highlight_end":77},{"text":"        use $crate::storage_management::{","highlight_start":1,"highlight_end":42},{"text":"            StorageManagement, StorageBalance, StorageBalanceBounds","highlight_start":1,"highlight_end":68},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl StorageManagement for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_deposit(","highlight_start":1,"highlight_end":32},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                account_id: Option<ValidAccountId>,","highlight_start":1,"highlight_end":52},{"text":"                registration_only: Option<bool>,","highlight_start":1,"highlight_end":49},{"text":"            ) -> StorageBalance {","highlight_start":1,"highlight_end":34},{"text":"                self.$token.storage_deposit(account_id, registration_only)","highlight_start":1,"highlight_end":75},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_withdraw(&mut self, amount: Option<U128>) -> StorageBalance {","highlight_start":1,"highlight_end":85},{"text":"                self.$token.storage_withdraw(amount)","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_unregister(&mut self, force: Option<bool>) -> bool {","highlight_start":1,"highlight_end":76},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                if let Some((account_id, balance)) = self.$token.internal_storage_unregister(force) {","highlight_start":1,"highlight_end":102},{"text":"                    $(self.$on_account_closed_fn(account_id, balance);)?","highlight_start":1,"highlight_end":73},{"text":"                    true","highlight_start":1,"highlight_end":25},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    false","highlight_start":1,"highlight_end":26},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_bounds(&self) -> StorageBalanceBounds {","highlight_start":1,"highlight_end":71},{"text":"                self.$token.storage_balance_bounds()","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_of(&self, account_id: ValidAccountId) -> Option<StorageBalance> {","highlight_start":1,"highlight_end":97},{"text":"                self.$token.storage_balance_of(account_id)","highlight_start":1,"highlight_end":59},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: Default` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:77:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `BorshDeserialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3246,"byte_end":3339,"line_start":77,"line_end":77,"column_start":1,"column_end":94,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);","highlight_start":1,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_storage!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2434,"byte_end":3983,"line_start":68,"line_end":110,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_storage {","highlight_start":1,"highlight_end":43},{"text":"    ($contract: ident, $token: ident $(, $on_account_closed_fn:ident)?) => {","highlight_start":1,"highlight_end":77},{"text":"        use $crate::storage_management::{","highlight_start":1,"highlight_end":42},{"text":"            StorageManagement, StorageBalance, StorageBalanceBounds","highlight_start":1,"highlight_end":68},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl StorageManagement for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_deposit(","highlight_start":1,"highlight_end":32},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                account_id: Option<ValidAccountId>,","highlight_start":1,"highlight_end":52},{"text":"                registration_only: Option<bool>,","highlight_start":1,"highlight_end":49},{"text":"            ) -> StorageBalance {","highlight_start":1,"highlight_end":34},{"text":"                self.$token.storage_deposit(account_id, registration_only)","highlight_start":1,"highlight_end":75},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_withdraw(&mut self, amount: Option<U128>) -> StorageBalance {","highlight_start":1,"highlight_end":85},{"text":"                self.$token.storage_withdraw(amount)","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_unregister(&mut self, force: Option<bool>) -> bool {","highlight_start":1,"highlight_end":76},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                if let Some((account_id, balance)) = self.$token.internal_storage_unregister(force) {","highlight_start":1,"highlight_end":102},{"text":"                    $(self.$on_account_closed_fn(account_id, balance);)?","highlight_start":1,"highlight_end":73},{"text":"                    true","highlight_start":1,"highlight_end":25},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    false","highlight_start":1,"highlight_end":26},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_bounds(&self) -> StorageBalanceBounds {","highlight_start":1,"highlight_end":71},{"text":"                self.$token.storage_balance_bounds()","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_of(&self, account_id: ValidAccountId) -> Option<StorageBalance> {","highlight_start":1,"highlight_end":97},{"text":"                self.$token.storage_balance_of(account_id)","highlight_start":1,"highlight_end":59},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25419,"byte_end":25442,"line_start":784,"line_end":784,"column_start":22,"column_end":45,"is_primary":false,"text":[{"text":"pub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {","highlight_start":22,"highlight_end":45}],"label":"required by this bound in `state_read`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshDeserialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:77:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshDeserialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:784:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m784\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_read<T: borsh::BorshDeserialize>() -> Option<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_read`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `FT_Contract: BorshSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `BorshSerialize` is not implemented for `FT_Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3246,"byte_end":3339,"line_start":77,"line_end":77,"column_start":1,"column_end":94,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);","highlight_start":1,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_storage!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2434,"byte_end":3983,"line_start":68,"line_end":110,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_storage {","highlight_start":1,"highlight_end":43},{"text":"    ($contract: ident, $token: ident $(, $on_account_closed_fn:ident)?) => {","highlight_start":1,"highlight_end":77},{"text":"        use $crate::storage_management::{","highlight_start":1,"highlight_end":42},{"text":"            StorageManagement, StorageBalance, StorageBalanceBounds","highlight_start":1,"highlight_end":68},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl StorageManagement for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_deposit(","highlight_start":1,"highlight_end":32},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                account_id: Option<ValidAccountId>,","highlight_start":1,"highlight_end":52},{"text":"                registration_only: Option<bool>,","highlight_start":1,"highlight_end":49},{"text":"            ) -> StorageBalance {","highlight_start":1,"highlight_end":34},{"text":"                self.$token.storage_deposit(account_id, registration_only)","highlight_start":1,"highlight_end":75},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_withdraw(&mut self, amount: Option<U128>) -> StorageBalance {","highlight_start":1,"highlight_end":85},{"text":"                self.$token.storage_withdraw(amount)","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_unregister(&mut self, force: Option<bool>) -> bool {","highlight_start":1,"highlight_end":76},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                if let Some((account_id, balance)) = self.$token.internal_storage_unregister(force) {","highlight_start":1,"highlight_end":102},{"text":"                    $(self.$on_account_closed_fn(account_id, balance);)?","highlight_start":1,"highlight_end":73},{"text":"                    true","highlight_start":1,"highlight_end":25},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    false","highlight_start":1,"highlight_end":26},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_bounds(&self) -> StorageBalanceBounds {","highlight_start":1,"highlight_end":71},{"text":"                self.$token.storage_balance_bounds()","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_of(&self, account_id: ValidAccountId) -> Option<StorageBalance> {","highlight_start":1,"highlight_end":97},{"text":"                self.$token.storage_balance_of(account_id)","highlight_start":1,"highlight_end":59},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs","byte_start":25609,"byte_end":25630,"line_start":789,"line_end":789,"column_start":23,"column_end":44,"is_primary":false,"text":[{"text":"pub fn state_write<T: borsh::BorshSerialize>(state: &T) {","highlight_start":23,"highlight_end":44}],"label":"required by this bound in `state_write`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `FT_Contract: BorshSerialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:77:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_storage!(FT_Contract, token, on_account_closed);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `BorshSerialize` is not implemented for `FT_Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/environment/env.rs:789:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m789\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn state_write<T: borsh::BorshSerialize>(state: &T) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `state_write`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 37 previous errors; 10 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 37 previous errors; 10 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0070, E0252, E0277, E0308, E0412, E0433, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0070, E0252, E0277, E0308, E0412, E0433, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0070`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0070`.\u001b[0m\n"}
